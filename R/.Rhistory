load("~/Desktop/Projects/1_labnehm_cran/example_data/ps_nets.RData")
source('~/Desktop/Projects/1_labnehm_cran/LaBNE_HM/LaBNE.R')
coords <- labne.hm(nets$`2.25`$`0`[[1]])
source('~/Desktop/Projects/1_labnehm_cran/LaBNE_HM/LaBNE.R')
source('~/Desktop/Projects/1_labnehm_cran/LaBNE_HM/LaBNE.R')
coords <- labne.hm(nets$`2.25`$`0`[[1]])
source('~/Desktop/Projects/1_labnehm_cran/LaBNE_HM/LaBNE.R')
coords <- labne.hm(nets$`2.25`$`0`[[1]])
source('~/Desktop/Projects/1_labnehm_cran/LaBNE_HM/LaBNE.R')
coords <- labne.hm(nets$`2.25`$`0`[[1]])
source('~/Desktop/Projects/1_labnehm_cran/LaBNE_HM/LaBNE.R')
coords <- labne.hm(nets$`2.25`$`0`[[1]])
plot(coords$cartesian$x, coords$cartesian$y, pch = 16, col = coords$polar$theta+1)
plot(coords$cartesian$x, coords$cartesian$y, pch = 16, col = nets$`2.25`$`0`[[2]]$theta)
head(coords$cartesian)
head(coords$polar)
plot(coords$polar$id, pch = 16)
plot(1:500, coords$polar$id, pch = 16)
source('~/Desktop/Projects/1_labnehm_cran/LaBNE_HM/LaBNE.R')
coords <- labne.hm(nets$`2.25`$`0`[[1]])
plot(1:500, coords$polar$id, pch = 16)
plot(coords$cartesian$x, coords$cartesian$y, pch = 16, col = nets$`2.25`$`0`[[2]]$theta)
plot(nets$`2.25`$`0`[[2]]$theta, coords$polar$theta, pch = 16)
plot(nets$`2.25`$`0`[[2]]$r, coords$polar$r, pch = 16)
plot(coords$polar$r, pch = 16)
plot(sort(coords$polar$r), pch = 16)
plot(nets$`2.25`$`0`[[2]]$r, pch = 16)
which.max(degree(nets$`2.25`$`0`[[1]]))
head(V(nets$`2.25`$`0`[[1]])$name)
head(coords$polar)
head(nets$`2.25`$`0`[[2]])
source('~/Desktop/Projects/1_labnehm_cran/LaBNE_HM/LaBNE.R')
coords <- labne.hm(nets$`2.25`$`0`[[1]])
head(coords$polar)
head(coords$polar, 20)
coords$polar <- coords$polar[order(as.numeric(coords$polar$id)), ]
head(coords$polar, 20)
plot(coords$polar$theta, nets$`2.25`$`0`[[2]]$theta[as.numeric(coords$polar$id)], pch = 16)
head(coords$polar)
head(nets$`2.25`$`0`[[2]][as.numeric(coords$polar$id),])
nets$`2.25`$`0`[[2]]$id <- 1:500
head(nets$`2.25`$`0`[[2]][as.numeric(coords$polar$id),])
head(coords$polar)
head(nets$`2.25`$`0`[[2]][c(1, 10, 100, 101, 102),])
head(as.numeric(coords$polar$id))
head(coords$polar$id)
head(as.character(coords$polar$id))
head(as.numeric(as.character(coords$polar$id)))
source('~/Desktop/Projects/1_labnehm_cran/LaBNE_HM/LaBNE.R')
coords <- labne.hm(nets$`2.25`$`0`[[1]])
head(coords$polar$id)
plot(coords$polar$theta, nets$`2.25`$`0`[[2]]$theta[as.numeric(coords$polar$id)], pch = 16)
source('~/Desktop/Projects/1_labnehm_cran/LaBNE_HM/LaBNE.R')
coords <- labne.hm(nets$`2.25`$`0`[[1]], w= "greg")
coords <- labne.hm("geg.txt", w= "greg")
source('~/Desktop/Projects/1_labnehm_cran/LaBNE_HM/LaBNE.R')
coords <- labne.hm("geg.txt", w= "greg")
help("tryCatch")
10/0
tryCatch(1, finally = print("Hello"))
tryCatch(stop("fred"),  error = function(e) e, finally = print("Hello"))
source('~/Desktop/Projects/1_labnehm_cran/LaBNE_HM/LaBNE.R')
coords <- labne.hm("geg.txt", w= "greg")
help("read.table")
read.table("ggg.txt")
source('~/Desktop/Projects/1_labnehm_cran/LaBNE_HM/LaBNE.R')
coords <- labne.hm("geg.txt", w= "greg")
load("~/Desktop/Projects/1_labnehm_cran/utility_functions.R")
source('~/Desktop/Projects/1_labnehm_cran/utility_functions.R')
plot_hyperbolic_net(nets$`2.25`$`0`[[1]], coords$polar[sort(as.numeric(coords$polar$id)), ], nets$`2.25`$`0`[[2]]$theta)
plot_hyperbolic_net(nets$`2.25`$`0`[[1]], coords$polar[sort(as.numeric(coords$polar$id)), 2:3], nets$`2.25`$`0`[[2]]$theta)
head(coords$polar[sort(as.numeric(coords$polar$id)), ])
head(coords$polar[sort(as.numeric(coords$polar$id)), ], 10)
head(coords$polar[order(as.numeric(coords$polar$id)), ], 10)
plot_hyperbolic_net(nets$`2.25`$`0`[[1]], coords$polar[order(as.numeric(coords$polar$id)), ], nets$`2.25`$`0`[[2]]$theta)
df <- merge(V(nets$`2.25`$`0`[[1]])$name, coords$polar, by = "id")
df <- merge(data.frame(id = V(nets$`2.25`$`0`[[1]])$name), coords$polar, by = "id")
df <- merge(data.frame(id = as.character(V(nets$`2.25`$`0`[[1]])$name)), coords$polar, by = "id")
head(df)
df <- merge(data.frame(id = 1:500, coords$polar, by = "id")
df <- merge(data.frame(id = 1:500), coords$polar, by = "id")
head(df)
source('~/Desktop/Projects/1_labnehm_cran/LaBNE_HM/LaBNE.R')
net <- nets$`2.5`$`0.3`[[1]]
known.coords <- nets$`2.5`$`0.3`[[2]]
coords <- labne.hm(net = net, gma = 2.5, Temp = 0.3, k.speedup = 10, m.in = 5, L.in = 0, w = pi/4)
source('~/Desktop/Projects/1_labnehm_cran/LaBNE_HM/LaBNE.R')
coords <- labne.hm(net = net, gma = 2.5, Temp = 0.3, k.speedup = 10, m.in = 5, L.in = 0, w = pi/4)
plot_hyperbolic_net(network = net, nodes = coords$polar, node.colour = known.coords$theta)
plot_hyperbolic_net(network = net, nodes = coords$polar, node.colour = coords$polar$theta)
source('~/Desktop/Projects/1_labnehm_cran/LaBNE_HM/LaBNE.R')
load("~/Desktop/Projects/1_labnehm_cran/example_data/AIR.RData")
V(air)$name
list.vertex.attributes(air)
df <- as_data_frame(air, what = "edges")
head(df)
class(df)
source('~/Desktop/Projects/1_labnehm_cran/LaBNE_HM/LaBNE.R')
source('~/Desktop/Projects/1_labnehm_cran/LaBNE_HM/LaBNE.R')
source('~/Desktop/Projects/1_labnehm_cran/LaBNE_HM/LaBNE.R')
setwd("..")
cos(0)
acosh(cosh(10)*cosh(10) - sinh(10)*sinh(10)*cos(0))
cosh(10)*cosh(10) - sinh(10)*sinh(10)*cos(0)
acosh(cosh(10)*cosh(10) - sinh(10)*sinh(10)*cos(0))
tmp <- acosh(cosh(10)*cosh(10) - sinh(10)*sinh(10)*cos(0))
tmp <- acosh(cosh(10)*cosh(10) - sinh(10)*sinh(10)*cos(0))
tmp <- cosh(10)*cosh(10) - sinh(10)*sinh(10)*cos(0)
tmp <- cos(0)
load("~/Desktop/Projects/1_labnehm_cran/example_data/ps_nets.RData")
coords <- nets$`2.25`$`0`[[2]]
hyperbolic_dist <- function(ZI, ZJ){
delta <- pi - abs(pi - abs(ZI$theta - ZJ$theta)) #Angular separation between points
d <- acosh(cosh(ZI$r)*cosh(ZJ$r) - sinh(ZI$r)*sinh(ZJ$r)*cos(delta))
d[is.na(d)] <- 0
return(d)
}
hyperbolic_dist <- function(ZI, ZJ){
delta <- pi - abs(pi - abs(ZI$theta - ZJ$theta)) #Angular separation between points
d <- acosh(cosh(ZI$r)*cosh(ZJ$r) - sinh(ZI$r)*sinh(ZJ$r)*cos(delta))
d[is.na(d)] <- 0
#Identify cases where d should be zero
idx <- (ZI$r == ZJ$r) & (ZI$theta == ZJ$theta)
d[idx] <- 0
return(d)
}
hyperbolic_dist <- function(ZI, ZJ){
delta <- pi - abs(pi - abs(ZI$theta - ZJ$theta)) #Angular separation between points
d <- acosh(cosh(ZI$r)*cosh(ZJ$r) - sinh(ZI$r)*sinh(ZJ$r)*cos(delta))
#d[is.na(d)] <- 0
#Identify cases where d should be zero
idx <- (ZI$r == ZJ$r) & (ZI$theta == ZJ$theta)
d[idx] <- 0
return(d)
}
D <- sapply(seq(nrow(coords)), function(i) hyperbolic_dist(coords[i, ], coords))
D[1:10, 1:10]
D[1, 1] == 0
sum(is.na(D))
sum(is.infinite(D))
warnings()
hyperbolic_dist <- function(ZI, ZJ){
delta <- pi - abs(pi - abs(ZI$theta - ZJ$theta)) #Angular separation between points
d <- acosh(cosh(ZI$r)*cosh(ZJ$r) - sinh(ZI$r)*sinh(ZJ$r)*cos(delta))
#d[is.na(d)] <- 0
#Identify cases where d should be zero
idx <- (ZI$r == ZJ$r) & (ZI$theta == ZJ$theta)
d[idx] <- 0
return(d)
}
D <- sapply(seq(nrow(coords)), function(i) hyperbolic_dist(coords[i, ], coords))
sum(is.na(D))
D[1:10, 1:10]
sum(D == 0)
sum(D)
hyperbolic_dist <- function(ZI, ZJ){
delta <- pi - abs(pi - abs(ZI$theta - ZJ$theta)) #Angular separation between points
d <- acosh(cosh(ZI$r)*cosh(ZJ$r) - sinh(ZI$r)*sinh(ZJ$r)*cos(delta))
#d[is.na(d)] <- 0
#Identify cases where d should be zero
# idx <- (ZI$r == ZJ$r) & (ZI$theta == ZJ$theta)
# d[idx] <- 0
return(d)
}
D <- sapply(seq(nrow(coords)), function(i) hyperbolic_dist(coords[i, ], coords))
sum(is.na(D))
which(is.na(D))
D[502]
D[1:10, 1:10]
coords[1:10, ]
delta <- pi -abs(pi - abs(coords$theta[2]-coords$theta[2]))
delta
acosh(cosh(coords$r[2])*cosh(coords$r[2]) - sinh(coords$r[2])*sinh(coords$r[2])*cos(delta))
cosh(coords$r[2])*cosh(coords$r[2]) - sinh(coords$r[2])*sinh(coords$r[2])*cos(delta)
acosh(1)
tmp <- cosh(coords$r[2])*cosh(coords$r[2]) - sinh(coords$r[2])*sinh(coords$r[2])*cos(delta)
acosh(0.99999)
acosh(0.5)
acosh(0.1)
acosh(0.88)
acosh(1.000000001)
acosh(1)
numeirc(5)
numeric(5)
hyperbolic_dist <- function(ZI, ZJ){
delta <- pi - abs(pi - abs(ZI$theta - ZJ$theta)) #Angular separation between points
d <- cosh(ZI$r)*cosh(ZJ$r) - sinh(ZI$r)*sinh(ZJ$r)*cos(delta)
#Due to precision problems, numbers d < 1 should be set to 1 to get the right final hyperbolic distance of 0
d[d < 1] <- 1
d <- acosh(d)
return(d)
}
D <- sapply(seq(nrow(coords)), function(i) hyperbolic_dist(coords[i, ], coords))
D[1:10, 1:10]
D[2, 2] == T
D[2, 2] == 0
D[2, 2] == F
sum(D == 0)
1 == c(2, 2, 1, 2, 2)
hyperbolic_dist <- function(ZI, ZJ){
delta <- pi - abs(pi - abs(ZI$theta - ZJ$theta)) #Angular separation between points
d <- cosh(ZI$r)*cosh(ZJ$r) - sinh(ZI$r)*sinh(ZJ$r)*cos(delta)
#Due to precision problems, numbers d < 1 should be set to 1 to get the right final hyperbolic distance of 0
d[d < 1] <- 1
d <- acosh(d)
#In addition, if ZI == ZJ, d should be 0
d[ZI$r == ZJ$r & ZI$theta == ZJ$theta] <- 0
return(d)
}
D <- sapply(seq(nrow(coords)), function(i) hyperbolic_dist(coords[i, ], coords))
sum(D==0)
1 %in% c()
setwd("R")
source('~/Desktop/Projects/1_labnehm_cran/R/LaBNE_HM.R')
setwd("../src/")
setwd("../R")
source('~/Desktop/Projects/1_labnehm_cran/R/LaBNE_HM.R')
load("~/Desktop/Projects/1_labnehm_cran/data/ps_nets.RData")
net <- nets$`2.5`$`0.3`[[1]]
known.coords <- nets$`2.5`$`0.3`[[2]]
#'
#' # Map the network to hyperbolic space using LaBNE+HM and specifying all parameters.
coords <- labne.hm(net = net, gma = 2.5, Temp = 0.3, k.speedup = 10, m.in = 5, L.in = 0, w = pi/4)
source('~/Desktop/Projects/1_labnehm_cran/R/LaBNE_HM.R')
net <- nets$`2.5`$`0.3`[[1]]
known.coords <- nets$`2.5`$`0.3`[[2]]
#'
#' # Map the network to hyperbolic space using LaBNE+HM and specifying all parameters.
coords <- labne.hm(net = net, gma = 2.5, Temp = 0.3, k.speedup = 10, m.in = 5, L.in = 0, w = pi/4)
plot(coords$cartesian$x, coords$cartesian$y, pch = 16)
package_version("igraph")
packageVersion("igraph")
packageVersion("RSpectra")
packageVersion("ggplot2")
help(ggplot)
library(ggplot2)
help(ggplot)
class(2)
class(2.42343)
class(2)
load("~/Desktop/Projects/h2_pin/data/PIN.RData")
library(igraph)
neighs <- neighbors(pin, v = 10)
neighs
load("~/Desktop/Projects/h2_pin/data/coords_PIN_LH.RData")
hyperbolic.dist <- function(ZI, ZJ){
delta <- pi - abs(pi - abs(ZI$theta - ZJ$theta)) #Angular separation between points
d <- cosh(ZI$r)*cosh(ZJ$r) - sinh(ZI$r)*sinh(ZJ$r)*cos(delta)
#Due to precision problems, numbers d < 1 should be set to 1 to get the right final hyperbolic distance of 0
d[d < 1] <- 1
d <- acosh(d)
#In addition, if ZI == ZJ, d should be 0
d[ZI$r == ZJ$r & ZI$theta == ZJ$theta] <- 0
return(d)
}
hyperbolic.dist(pin.lh[neighs[1], ], pin.lh[neighs, ])
as.numeric(neighs)
hyperbolic.dist(pin.lh[699, ], pin.lh[855, ])
hyperbolic.dist(pin.lh[699, ], pin.lh[8678, ])
neighs[1]
neighs[1] == 699
neighs[1] == 800
rm(Temp, neighs)
plot(seq(0.00001, 1, 0.01), exp(1/seq(0.00001, 1, 0.01)), pch = 16)
exp(1/05)
exp(1/0.5)
exp(1/0.6)
exp(1/0.7)
plot(seq(0, 1, 0.1), exp(1/seq(0, 1, 0.1)), pch = 16)
plot(seq(0.2, 1, 0.1), exp(1/seq(0.2, 1, 0.1)), pch = 16)
plot(seq(0.2, 1, 0.1), exp(10/seq(0.2, 1, 0.1)), pch = 16)
sign(10-20)
(sign(10-20) + 1)/2
(sign(20-20) + 1)/2
(sign(21-20) + 1)/2
source('~/Desktop/Projects/1_labnehm_cran/R/ps_model.R')
source('~/Desktop/Projects/1_labnehm_cran/R/utility_functions.R')
net <- ps.model(500, 6, 2.5, 0.3)
source('~/Desktop/Projects/1_labnehm_cran/R/ps_model.R')
net <- ps.model(500, 6, 2.5, 0.3)
net <- ps.model(500, 6, 2.5, 0.1)
conn <- get.conn.probs(net$network, net$polar, 25)
source('~/Desktop/Projects/1_labnehm_cran/R/utility_functions.R')
conn <- get.conn.probs(net$network, net$polar, 25)
theo <- get.theoretical.conn.probs(conn$dist, vcount(net$network), 2.5, 0.1, 6)
source('~/Desktop/Projects/1_labnehm_cran/R/utility_functions.R')
theo <- get.theoretical.conn.probs(conn$dist, vcount(net$network), 2.5, 0.1, 6)
plot(conn$dist, conn$prob, pch = 16, xlab = "Hyperbolic distance", ylab = "Connection probability")
points(theo$dist, theo$prob, pch = 16, xlab = "Hyperbolic distance", ylab = "Connection probability", col = "red")
legend("topright", c("Real", "Theory"), pch = c(16, 16), col = c("black", "red"))
conn$dist
theo$dist
theo$prob
source('~/Desktop/Projects/1_labnehm_cran/R/utility_functions.R')
theo <- get.theoretical.conn.probs(conn$dist, vcount(net$network), 6, 2.5, 0.1)
plot(conn$dist, conn$prob, pch = 16, xlab = "Hyperbolic distance", ylab = "Connection probability")
points(theo$dist, theo$prob, pch = 16, xlab = "Hyperbolic distance", ylab = "Connection probability", col = "red")
legend("topright", c("Real", "Theory"), pch = c(16, 16), col = c("black", "red"))
plot.hyperbolic.net(net$network, net$polar, net$polar$theta)
debugSource('~/Desktop/Projects/1_labnehm_cran/R/utility_functions.R')
debugSource('~/Desktop/Projects/1_labnehm_cran/R/utility_functions.R')
dist <- sapply(seq(nrow(net$polar)), function(i) hyperbolic.dist(net$polar[i, ], net$polar))
dist[1:10, 1:10]
source('~/Desktop/Projects/1_labnehm_cran/R/utility_functions.R')
d <- hyperbolic.dist(net$polar[1, ], net$polar)
head(d)
head(net$polar)
head(net$polar, 20)
head(conn)
net <- ps.model(500, 10, 2.5, 0)
conn <- get.conn.probs(net$network, net$polar, 25)
head(conn)
plot(conn$dist, conn$prob, pch = 16, xlab = "Hyperbolic distance", ylab = "Connection probability")
d <- hyperbolic.dist(net$polar[1, ], net$polar)
dist <- sapply(seq(nrow(net$polar)), function(i) hyperbolic.dist(net$polar[i, ], net$polar))
sum(dist)
sum(ref[(dist >= 0) & (dist < 1.04)])
ref <- as_adjacency_matrix(net$network, type = "upper", sparse = F)
sum(ref[(dist >= 0) & (dist < 1.04)])
sum(ref[(dist >= 0) & (dist < 1.035)])
sum((dist >= 0) & (dist < 1.035))
sum((dist > 0) & (dist < 1.035))
conn <- get.conn.probs(net$network, net$polar, 15)
head(conn)
plot(conn$dist, conn$prob, pch = 16, xlab = "Hyperbolic distance", ylab = "Connection probability")
theo <- get.theoretical.conn.probs(conn$dist, vcount(net$network), 10, 2.5, 0)
points(theo$dist, theo$prob, pch = 16, xlab = "Hyperbolic distance", ylab = "Connection probability", col = "red")
head(theo)
(sign(0 - R) + 1)/2
(sign(0 - 20) + 1)/2
(sign(21 - 20) + 1)/2
(sign(20 - 1) + 1)/2
(sign(20 - 21) + 1)/2
source('~/Desktop/Projects/1_labnehm_cran/R/utility_functions.R')
q()
load("~/Desktop/Projects/1_labnehm_cran/data/AIR.RData")
save(air, Temp, file = "../data/air.RData")
